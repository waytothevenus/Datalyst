<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- sK1 2 1
00002de8 -->
<svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.0" width="300" height="300">
<image y="0.0"  x="0.0" xlink:href="data:image/png;base64,
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
"  height="300" width="300" />
<!-- Encapsulated SK2
obj('Document')
set('styles',{'Default Style': [[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []], 'Default Text Style': [[1, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Regular', 12.0, 0, [], True]]})
set('doc_units','px')
set('metainfo',['', '', '', ''])
set('doc_origin',1)
set('resources',{})
obj('Pages')
set('page_counter',1)
set('page_format',['Custom', (231.0, 48.0), 1])
obj('Page')
set('name','SVG page')
set('page_format',['Custom', (200.0, 40.0), 1])
set('layer_counter',1)
obj('Layer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.19607843137254902, 0.3215686274509804, 0.6352941176470588], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','Layer 1')
set('color',[0.19607843137254902, 0.3215686274509804, 0.6352941176470588, 1.0])
set('properties',[1, 1, 1, 1])
obj('Curve')
set('paths',[[[0.425781, 12.6316], [[[0.425781, 5.65535], [6.08113, 0.0], [13.0574, 0.0], 0], [35.7942, 0.0], [[42.7704, 0.0], [48.4258, 5.65535], [48.4258, 12.6316], 0], [48.4258, 35.3684], [[48.4258, 42.3446], [42.7704, 48.0], [35.7942, 48.0], 0], [13.0574, 48.0], [[6.08113, 48.0], [0.425781, 42.3446], [0.425781, 35.3684], 0], [0.425781, 12.6316]], 1]])
set('style',[[0, 0, ['RGB', [0.27450980392156865, 0.37254901960784315, 1.0], 1.0, '']], [], [], []])
set('stroke_trafo',[0.7818177477297784, 0.0, 0.0, -0.7568827719668121, -95.32934771823994, 17.566918018934867])
set('fill_trafo',[])
set('trafo',[0.7818177477297784, 0.0, 0.0, -0.7568827719668121, -95.32934771823994, 17.566918018934867])
end()
obj('Curve')
set('paths',[[[13.0615, 12.6323], [[[13.0615, 11.237], [14.1926, 10.106], [15.5878, 10.106], 0], [[16.9831, 10.106], [18.1142, 11.237], [18.1142, 12.6323], 0], [18.1142, 35.3691], [[18.1142, 36.7644], [16.9831, 37.8954], [15.5878, 37.8954], 0], [[14.1926, 37.8954], [13.0615, 36.7644], [13.0615, 35.3691], 0], [13.0615, 12.6323]], 1]])
set('style',[[0, 0, ['RGB', [1.0, 1.0, 1.0], 1.0, 'white']], [], [], []])
set('stroke_trafo',[0.7818177477297784, 0.0, 0.0, -0.7568827719668121, -95.36832495272624, 17.566918018934867])
set('trafo',[0.7818177477297784, 0.0, 0.0, -0.7568827719668121, -95.36832495272624, 17.566918018934867])
end()
obj('Curve')
set('paths',[[[22.5391, 22.7353], [[[22.5391, 21.3401], [23.6701, 20.209], [25.0654, 20.209], 0], [[26.4606, 20.209], [27.5917, 21.3401], [27.5917, 22.7353], 0], [27.5917, 35.3669], [[27.5917, 36.7621], [26.4606, 37.8932], [25.0654, 37.8932], 0], [[23.6701, 37.8932], [22.5391, 36.7621], [22.5391, 35.3669], 0], [22.5391, 22.7353]], 1]])
set('style',[[0, 0, ['RGB', [1.0, 1.0, 1.0], 0.9, 'white']], [], [], []])
set('stroke_trafo',[0.7818177477297784, 0.0, 0.0, -0.7568827719668121, -95.36832495272624, 17.566918018934867])
set('trafo',[0.7818177477297784, 0.0, 0.0, -0.7568827719668121, -95.36832495272624, 17.566918018934867])
end()
obj('Curve')
set('paths',[[[32.0078, 16.4189], [[[32.0078, 15.0236], [33.1389, 13.8926], [34.5341, 13.8926], 0], [[35.9294, 13.8926], [37.0604, 15.0236], [37.0604, 16.4189], 0], [37.0604, 35.3663], [[37.0604, 36.7615], [35.9294, 37.8926], [34.5341, 37.8926], 0], [[33.1389, 37.8926], [32.0078, 36.7615], [32.0078, 35.3663], 0], [32.0078, 16.4189]], 1]])
set('style',[[0, 0, ['RGB', [1.0, 1.0, 1.0], 0.7, 'white']], [], [], []])
set('stroke_trafo',[0.7818177477297784, 0.0, 0.0, -0.7568827719668121, -95.36832495272624, 17.566918018934867])
set('trafo',[0.7818177477297784, 0.0, 0.0, -0.7568827719668121, -95.36832495272624, 17.566918018934867])
end()
obj('Curve')
set('paths',[[[91.3521, 37.5], [[[94.0984, 37.5], [96.4881, 36.2516], [97.2371, 34.4326], 0], [97.5581, 37.0363], [101.375, 37.0363], [101.375, 26.3362], [[101.375, 21.4498], [98.4498, 18.8818], [93.7061, 18.8818], 0], [[88.9267, 18.8818], [85.788, 21.3785], [85.788, 25.1948], 0], [89.4974, 25.1948], [[89.4974, 23.3402], [90.9241, 22.2701], [93.4921, 22.2701], 0], [[95.7035, 22.2701], [97.1301, 23.2332], [97.1301, 25.6229], 0], [97.1301, 26.0152], [91.8514, 26.4075], [[87.6784, 26.7285], [85.3243, 28.7616], [85.3243, 32.0073], 0], [[85.3243, 35.3243], [87.607, 37.5], [91.3521, 37.5], 0]], 1], [[92.7788, 34.2186], [[[90.8171, 34.2186], [89.747, 33.4339], [89.747, 31.8289], 0], [[89.747, 30.4022], [90.7814, 29.5106], [93.4921, 29.2609], 0], [97.1658, 28.9756], [97.1658, 29.9029], [[97.1658, 32.6136], [95.4538, 34.2186], [92.7788, 34.2186], 0]], 1]])
set('style',[[0, 0, ['RGB', [1.0, 1.0, 1.0], 1.0, 'white']], [], [], []])
set('stroke_trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
set('trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
end()
obj('Curve')
set('paths',[[[107.825, 15.8857], [[[109.252, 15.8857], [110.429, 14.7087], [110.429, 13.2464], 0], [[110.429, 11.784], [109.252, 10.6427], [107.825, 10.6427], 0], [[106.327, 10.6427], [105.15, 11.784], [105.15, 13.2464], 0], [[105.15, 14.7087], [106.327, 15.8857], [107.825, 15.8857], 0]], 1], [[105.649, 37.0363], [[110.001, 37.0363], [110.001, 19.4168], [105.649, 19.4168], [105.649, 37.0363]], 1]])
set('style',[[0, 0, ['RGB', [1.0, 1.0, 1.0], 1.0, 'white']], [], [], []])
set('stroke_trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
set('trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
end()
obj('Curve')
set('paths',[[[118.883, 37.0363], [[118.883, 10.5], [114.568, 10.5], [114.568, 37.0363], [118.883, 37.0363]], 1]])
set('style',[[0, 0, ['RGB', [1.0, 1.0, 1.0], 1.0, 'white']], [], [], []])
set('stroke_trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
set('trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
end()
obj('Curve')
set('paths',[[[126.337, 37.0363], [[128.441, 31.0086], [138.179, 31.0086], [140.283, 37.0363], [145.098, 37.0363], [135.682, 10.9637], [131.009, 10.9637], [121.593, 37.0363], [126.337, 37.0363]], 1], [[132.757, 18.7391], [[[133.007, 18.0258], [133.221, 17.2411], [133.328, 16.7417], 0], [[133.399, 17.2768], [133.649, 18.0614], [133.863, 18.7391], 0], [136.859, 27.1565], [129.797, 27.1565], [132.757, 18.7391]], 1]])
set('style',[[0, 0, ['RGB', [1.0, 1.0, 1.0], 1.0, 'white']], [], [], []])
set('stroke_trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
set('trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
end()
obj('Curve')
set('paths',[[[154.165, 37.5], [[[156.84, 37.5], [159.122, 36.323], [160.192, 34.29], 0], [160.478, 37.0363], [164.472, 37.0363], [164.472, 10.5], [160.157, 10.5], [160.157, 21.6638], [[159.051, 19.9161], [156.875, 18.8818], [154.414, 18.8818], 0], [[149.1, 18.8818], [145.89, 22.8052], [145.89, 28.2979], 0], [[145.89, 33.755], [149.064, 37.5], [154.165, 37.5], 0]], 1], [[155.128, 33.5053], [[[152.096, 33.5053], [150.241, 31.2939], [150.241, 28.1552], 0], [[150.241, 25.0165], [152.096, 22.7695], [155.128, 22.7695], 0], [[158.159, 22.7695], [160.121, 24.9808], [160.121, 28.1552], 0], [[160.121, 31.3296], [158.159, 33.5053], [155.128, 33.5053], 0]], 1]])
set('style',[[0, 0, ['RGB', [1.0, 1.0, 1.0], 1.0, 'white']], [], [], []])
set('stroke_trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
set('trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
end()
obj('Curve')
set('paths',[[[202.74, 15.8857], [[[204.167, 15.8857], [205.344, 14.7087], [205.344, 13.2464], 0], [[205.344, 11.784], [204.167, 10.6427], [202.74, 10.6427], 0], [[201.242, 10.6427], [200.065, 11.784], [200.065, 13.2464], 0], [[200.065, 14.7087], [201.242, 15.8857], [202.74, 15.8857], 0]], 1], [[200.564, 37.0363], [[204.916, 37.0363], [204.916, 19.4168], [200.564, 19.4168], [200.564, 37.0363]], 1]])
set('style',[[0, 0, ['RGB', [1.0, 1.0, 1.0], 1.0, 'white']], [], [], []])
set('stroke_trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
set('trafo',[1.0, 0.0, 0.0, -1.0, -115.5, 24.0])
end()
obj('TextBlock')
set('style',[[0, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Normal', 40.0, 0, [], True]])
set('text','RGF0YWx5c3Q=')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -85.09874326750449, -2.333931777378815])
set('width',-1)
set('trafos',{})
set('trafo',[0.7345491763198769, 0.02033823748559303, -0.006475838820418666, 0.7041427957472352, -43.16562845102881, -13.927291096133057])
end()
end()
end()
end()
obj('DesktopLayers')
end()
obj('MasterLayers')
end()
obj('GridLayer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.0, 0.0, 1.0], 0.15, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','GridLayer')
set('color',[0.0, 0.0, 1.0, 0.15])
set('grid',[0.0, 0.0, 2.8346456692913384, 2.8346456692913384])
set('properties',[0, 0, 0, 1])
end()
obj('GuideLayer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.0, 0.3176470588235294, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','GuideLayer')
set('color',[0.0, 0.3176470588235294, 1.0, 1.0])
set('properties',[1, 1, 0, 0])
end()
end()
-->
</svg>
